name: Java CI

on:
  push:
    branches:
      - develop
      - 'feature/**'

jobs:
  prep:
    runs-on: ubuntu-latest
    outputs:
      rev: ${{ steps.shortrev.outputs.rev }}
      ver: ${{ steps.pversion.outputs.ver }}
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8 & run tests & generate artifacts
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - id: shortrev
        run: echo ::set-output name=rev::$(git rev-parse --short HEAD)
      - id: pversion
        run: echo ::set-output name=ver::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
  versiongenerate:
    runs-on: ubuntu-latest
    needs: prep
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - id: version
        run: echo ::set-output name=version::${{ needs.prep.outputs.ver }}-${{ needs.prep.outputs.rev }}
  build:
    runs-on: ubuntu-latest
    needs: versiongenerate
    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8 & run tests & generate artifacts
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Version set
        run: mvn versions:set versions:commit -DnewVersion=${{ needs.versiongenerate.outputs.version }}
      - name: Build and test with Maven
        run: mvn clean install
      - name: PMD check
        run: mvn pmd:check
      - id: getfilename
        run: echo "::set-output name=file::$(ls target/symphony-dal-communicator-other-genericserver-${{ needs.versiongenerate.outputs.version }}-SNAPSHOT.jar)"
      - uses: actions/upload-artifact@v1
        with:
          name: WebServerV2
          path: ${{ steps.getfilename.outputs.file }}